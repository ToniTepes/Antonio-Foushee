{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","props","state","winHeight","createSVGElement","n","v","p","document","createElementNS","setAttributeNS","componentDidMount","this","setWindowHeight","_this","window","addEventListener","sWidth","svg","clientWidth","tText","querySelector","tWidth","getBoundingClientRect","width","tInnerText","innerHTML","split","length","forEach","e","i","tSpan","dy","x","appendChild","setTimeout","style","height","margin","fontSize","parseInt","getComputedStyle","getPropertyValue","setState","innerHeight","render","showFooter","placeholder","lang","title","data","site","siteMetadata","className","viewBox","preserveAspectRatio","ref","c","id","patternUnits","y","xlinkHref","fill","textAnchor","introTag","description","React","Component","query"],"mappings":"6NAUMA,E,oBACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACTC,UAAW,SAHA,E,kHAOnBC,iBAAA,SAAiBC,EAAGC,GAEhB,IAAK,IAAIC,KADTF,EAAIG,SAASC,gBAAgB,6BAA8BJ,GAC7CC,EAAGD,EAAEK,eAAe,KAAMH,EAAGD,EAAEC,IAC7C,OAAOF,G,EAGXM,kBAAA,WACIC,KAAKC,kBACL,IAAIC,EAAQF,KACZG,OAAOC,iBAAiB,UAAU,WAC9BF,EAAMD,qBAEV,IAAII,EAASL,KAAKM,IAAIC,YAClBC,EAAQR,KAAKM,IAAIG,cAAc,QAC/BC,EAASF,EAAMG,wBAAwBC,MAE3C,GAAIF,EAASL,EAAQ,CACjB,IAAIQ,EAAaL,EAAMM,UACvB,GAAID,EAAWE,MAAM,KAAKC,OAAS,EAC/BR,EAAMM,UAAY,GAClBD,EAAWE,MAAM,KAAKE,SAAQ,SAAUC,EAAGC,GACvC,IAAIC,EAAQlB,EAAMV,iBAAiB,QAAS,CACxC6B,GAAU,IAANF,EAAU,MAAQ,OACtBG,EAAG,OAEPF,EAAMN,UAAYI,EAClBV,EAAMe,YAAYH,MAEtBI,YAAW,WACPtB,EAAMI,IAAImB,MAAMC,OACZlB,EAAMG,wBAAwBe,OAAS,GAC3CxB,EAAMI,IAAImB,MAAME,OAAS,cAC1B,UAEH,KAAOjB,EAASL,GAAQ,CACpB,IAAIuB,EAAWC,SACX1B,OACK2B,iBAAiBtB,EAAO,MACxBuB,iBAAiB,cAE1BvB,EAAMiB,MAAMG,SAAWA,EAAW,EAAI,KACtClB,EAASF,EAAMG,wBAAwBC,S,EAKvDX,gBAAA,WACID,KAAKgC,SAAS,CACVzC,UAAWY,OAAO8B,e,EAG1BC,OAAA,WAAU,IAAD,OACL,OACI,kBAAC,IAAD,CAAQC,YAAY,EAAOC,aAAa,GACpC,kBAAC,IAAD,CACIC,KAAK,KACLC,MAAOtC,KAAKX,MAAMkD,KAAKC,KAAKC,aAAaH,QAE7C,yBACII,UAAU,OACVjB,MAAO,CAAEC,OAAQ1B,KAAKV,MAAMC,UAAY,OAExC,yBAAKmD,UAAU,mBACX,yBAAKA,UAAU,2BACX,yBACI9B,MAAM,MACNc,OAAO,QACPiB,QAAQ,cACRC,oBAAoB,iBACpBC,IAAK,SAAAC,GAAC,OAAK,EAAKxC,IAAMwC,IAL1B,UAYI,6BACIC,GAAG,cACHC,aAAa,iBACbpC,MAAM,MACNc,OAAO,OAEP,0BACIJ,EAAE,IACF2B,EAAE,IACFP,UAAU,eACV9B,MAAM,MACNc,OAAO,QAEX,2BACIwB,UAAU,mBACVxB,OAAO,MACPd,MAAM,MACNqC,EAAE,IACFL,oBAAoB,UAG5B,0BACIO,KAAK,oBACLC,WAAW,SACX9B,EAAE,KACF2B,EAAE,MAJN,WAQA,0BACIE,KAAK,oBACLC,WAAW,SACX9B,EAAE,KACF2B,EAAE,MAJN,aAWR,uBAAGP,UAAU,2BACR1C,KAAKX,MAAMkD,KAAKC,KAAKC,aAAaY,UAEvC,uBAAGX,UAAU,yBACR1C,KAAKX,MAAMkD,KAAKC,KAAKC,aAAaa,aAKvC,yBAAKZ,UAAU,kBACX,kBAAC,IAAD,W,GAtIJa,IAAMC,WAkJfpE,YAER,IAAMqE,EAAK","file":"component---src-pages-index-js-944bb581e515e81acf29.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport SEO from \"../components/seo\";\r\nimport SocialLinks from \"../components/sociallinks\";\r\n// import PortfolioList from \"../components/list-portfolio\";\r\n// import BlogList from \"../components/list-blog\";\r\n// import Contact from \"../components/contact\";\r\nimport \"../style/wall.less\";\r\n\r\nclass IndexPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            winHeight: \"100vh\"\r\n        };\r\n    }\r\n\r\n    createSVGElement(n, v) {\r\n        n = document.createElementNS(\"http://www.w3.org/2000/svg\", n);\r\n        for (var p in v) n.setAttributeNS(null, p, v[p]);\r\n        return n;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setWindowHeight();\r\n        let _this = this;\r\n        window.addEventListener(\"resize\", function () {\r\n            _this.setWindowHeight();\r\n        });\r\n        let sWidth = this.svg.clientWidth,\r\n            tText = this.svg.querySelector(\"text\"),\r\n            tWidth = tText.getBoundingClientRect().width;\r\n\r\n        if (tWidth > sWidth) {\r\n            let tInnerText = tText.innerHTML;\r\n            if (tInnerText.split(\" \").length > 1) {\r\n                tText.innerHTML = \"\";\r\n                tInnerText.split(\" \").forEach(function (e, i) {\r\n                    let tSpan = _this.createSVGElement(\"tspan\", {\r\n                        dy: i === 0 ? \"0em\" : \".8em\",\r\n                        x: \"50\"\r\n                    });\r\n                    tSpan.innerHTML = e;\r\n                    tText.appendChild(tSpan);\r\n                });\r\n                setTimeout(function () {\r\n                    _this.svg.style.height =\r\n                        tText.getBoundingClientRect().height + 70;\r\n                    _this.svg.style.margin = \"15px auto\";\r\n                }, 250);\r\n            } else {\r\n                while (tWidth > sWidth) {\r\n                    let fontSize = parseInt(\r\n                        window\r\n                            .getComputedStyle(tText, null)\r\n                            .getPropertyValue(\"font-size\")\r\n                    );\r\n                    tText.style.fontSize = fontSize - 1 + \"px\";\r\n                    tWidth = tText.getBoundingClientRect().width;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setWindowHeight() {\r\n        this.setState({\r\n            winHeight: window.innerHeight\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout showFooter={false} placeholder={false}>\r\n                <SEO\r\n                    lang=\"en\"\r\n                    title={this.props.data.site.siteMetadata.title}\r\n                />\r\n                <div\r\n                    className=\"wall\"\r\n                    style={{ height: this.state.winHeight + \"px\" }}\r\n                >\r\n                    <div className=\"intro container\">\r\n                        <div className=\"main-title text-primary\">\r\n                            <svg\r\n                                width=\"90%\"\r\n                                height=\"220px\"\r\n                                viewBox=\"0 0 100 100\"\r\n                                preserveAspectRatio=\"xMidYMid slice\"\r\n                                ref={c => (this.svg = c)}\r\n                            >\r\n                                {/* {this.props.data.site.siteMetadata\r\n                                    .capitalizeTitleOnHome\r\n                                    ? this.props.data.site.siteMetadata.title.toUpperCase()\r\n                                    : this.props.data.site.siteMetadata.title} */}\r\n                                Antonio\r\n                                <pattern\r\n                                    id=\"wallPattern\"\r\n                                    patternUnits=\"userSpaceOnUse\"\r\n                                    width=\"100\"\r\n                                    height=\"100\"\r\n                                >\r\n                                    <rect\r\n                                        x=\"0\"\r\n                                        y=\"0\"\r\n                                        className=\"fill-primary\"\r\n                                        width=\"100\"\r\n                                        height=\"100\"\r\n                                    />\r\n                                    <image\r\n                                        xlinkHref=\"/images/wall.jpg\"\r\n                                        height=\"100\"\r\n                                        width=\"100\"\r\n                                        y=\"0\"\r\n                                        preserveAspectRatio=\"none\"\r\n                                    ></image>\r\n                                </pattern>\r\n                                <text\r\n                                    fill=\"url(#wallPattern)\"\r\n                                    textAnchor=\"middle\"\r\n                                    x=\"50\"\r\n                                    y=\"48\"\r\n                                >\r\n                                    Antonio\r\n                                </text>\r\n                                <text\r\n                                    fill=\"url(#wallPattern)\"\r\n                                    textAnchor=\"middle\"\r\n                                    x=\"50\"\r\n                                    y=\"59\"\r\n                                >\r\n                                    Foushee\r\n                                </text>\r\n\r\n                            </svg>\r\n                        </div>\r\n                        <p className=\"tag-line text-secondary\">\r\n                            {this.props.data.site.siteMetadata.introTag}\r\n                        </p>\r\n                        <p className=\"caption text-tertiary\">\r\n                            {this.props.data.site.siteMetadata.description}\r\n                        </p>\r\n                        {/* <a href=\"#portfolio\" className=\"btn\">\r\n                            SEE WORKS\r\n                        </a> */}\r\n                        <div className=\"social-buttons\">\r\n                            <SocialLinks />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <PortfolioList /> */}\r\n                {/* <BlogList /> */}\r\n                {/* <Contact /> */}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;\r\n\r\nexport const query = graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                capitalizeTitleOnHome\r\n                titleImage\r\n                introTag\r\n                description\r\n                social {\r\n                    name\r\n                    url\r\n                    icon\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}